services:
  app:
    build: .
    command: gunicorn --workers 4 --bind 0.0.0.0:5000 "app.factory:create_app()"
    container_name: video-api
    depends_on:
      - db
      - redis
    env_file:
      - .env

  worker:
    build: .      
    command: celery -A app.celery_worker.celery worker --loglevel=INFO --concurrency=2      
    container_name: video-api-worker
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped

  nginx:
      image: nginx:stable-alpine
      container_name: nginx-proxy
      ports:
        - "80:80"   
        - "443:443" 
      volumes:        
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        - static_content:/app/app/static:ro
        - /var/www/certbot:/var/www/certbot:rw
        - /var/www/certbot/.well-known:/var/www/certbot/.well-known:rw
        - /etc/letsencrypt:/etc/letsencrypt:ro
      depends_on:
        - app
      restart: unless-stopped

  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vapi
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
  minio:
    image: minio/minio:latest
    container_name: minio-storage
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
      - MINIO_DEFAULT_BUCKETS=videos
    volumes:
      - minio_data:/data
    restart: unless-stopped
      
volumes:
  postgres_data:
  static_content:
  minio_data: