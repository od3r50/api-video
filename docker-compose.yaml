version: "3.9"
services:
  app:
    build: .
    command: gunicorn --workers 4 --bind 0.0.0.0 "app.factory:create_app()"
    volumes:
      - .:/app
      - venv:/app/venv
    container_name: video-api
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/vapi
      - SECRET_KEY=my-secret-key
      - FLASK_APP=run.py
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=db+postgresql://postgres:postgres@db:5432/vapi
    depends_on:
      - db
      - redis
  worker:
    build: .      
    command: celery -A app.celery_worker.celery worker --loglevel=INFO --concurrency=2      
    container_name: video-api-worker
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/vapi
      - SECRET_KEY=my-secret-key
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=db+postgresql://postgres:postgres@db:5432/vapi
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped

  nginx:
      image: nginx:stable-alpine
      container_name: nginx-proxy
      ports:
        - "80:80"   
        # - "443:443" # Descomente se for usar HTTPS
      volumes:
        # Monta a configuração customizada (substitua 'nginx.conf' pelo nome que usar)
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        # Monta o mesmo volume de estáticos que o 'web', como read-only
        - static_content:/app/app/static:ro
        # Descomente e ajuste se for usar SSL/HTTPS
        # - ./caminho/para/certificados:/etc/nginx/ssl/certs:ro
        # - ./caminho/para/chave:/etc/nginx/ssl/private:ro
      depends_on:
        - app # Garante que o 'web' inicie antes do Nginx
      restart: unless-stopped
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vapi
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db  

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
      
volumes:
  venv:
  postgres_data:
  static_content: